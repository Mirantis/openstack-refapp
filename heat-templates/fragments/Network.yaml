heat_template_version: queens

parameters:

  app_network_cidr:
    type: string
  database_network_cidr:
    type: string
  public_network_id:
    type: string
    default: 'public'
  dns_nameservers:
    type: json
  dns_zone:
    type: string

resources:

  dns_random_string:
    type: OS::Heat::RandomString
    properties:
      character_classes: [{"class": lowercase, "min": 10}]
      length: 10

  database_zone_name:
    type: OS::Heat::Value
    properties:
      value:
        list_join: [ '.', [ { get_resource: dns_random_string }, 'db', { get_param: dns_zone } ]]
      type: string

  database_zone:
    type: OS::Designate::Zone
    properties:
      name: { get_attr: [database_zone_name, value] }
      description: String
      email: refapp-admin@test.test

  database_network:
    type: OS::Neutron::Net
    properties:
      dns_domain: { get_attr: [database_zone_name, value] }
  database_subnet:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: database_network }
      enable_dhcp: true
      cidr: { get_param: database_network_cidr }
      dns_nameservers: { get_param: dns_nameservers }

  app_zone_name:
    type: OS::Heat::Value
    properties:
      value:
        list_join: [ '.', [ { get_resource: dns_random_string }, 'app', { get_param: dns_zone } ]]
      type: string

  app_zone:
    type: OS::Designate::Zone
    properties:
      name: { get_attr: [app_zone_name, value] }
      description: String
      email: refapp-admin@test.test

  app_network:
    type: OS::Neutron::Net
    properties:
      dns_domain: { get_attr: [app_zone_name, value] }
  app_subnet:
    type: OS::Neutron::Subnet
    properties:
      network: { get_resource: app_network }
      enable_dhcp: true
      cidr: { get_param: app_network_cidr }
      dns_nameservers: { get_param: dns_nameservers }

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network_id }

  database_router_iface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: router }
      subnet: { get_resource: database_subnet }

  app_router_iface:
    type: OS::Neutron::RouterInterface
    properties:
      router: { get_resource: router }
      subnet: { get_resource: app_subnet }

outputs:
  database_network_id:
    description: The uuid of database network
    value: { get_resource: database_network }
  database_subnet_id:
    description: The uuid of database subnet
    value: { get_resource: database_subnet }
  database_dns_zone_id:
    description: The uuid of refapp DB DNS zone
    value: { get_resource: database_zone }
  database_dns_zone_name:
    description: The name for DNS zone with database refapp
    value: { get_attr: [database_zone_name, value] }
  app_network_id:
    description: The uuid of app network
    value: { get_resource: app_network }
  app_subnet_id:
    description: The uuid of app subnet
    value: { get_resource: app_subnet }
  app_dns_zone_id:
    description: The uuid of refapp APP DNS zone
    value: { get_resource: app_zone }
  app_dns_zone_name:
    description: The name for DNS zone with APPs refapp
    value: { get_attr: [app_zone_name, value] }
